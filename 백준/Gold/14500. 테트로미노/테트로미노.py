# 백준 14500 테트로미노

n, m = map(int, input().split())
paper = [list(map(int, input().split())) for _ in range(n)]

tets = [
    # 1. 막대
    [(0,1), (0,2), (0,3)], [(1,0), (2,0), (3,0)], 

    # 2. 정사각형
    [(0,1), (1,0), (1,1)],

    # 3. L자형
    [(1,0), (1,1), (2,1)], [(0,-1), (1,-1), (1,-2)],
    [(1,0), (1,-1), (2,-1)], [(0,1), (1,1), (1,2)],
    [(1,0), (2,0), (2,1)], [(0,1), (0,2), (1,0)], 
    [(0,1), (1,1), (2,1)], [(0,1), (0,2), (-1,2)],
    [(1,0), (2,0), (2,-1)], [(0,1), (0,2), (1,2)], 
    [(1,0), (2,0), (0,1)], [(1,0), (1,1), (1,2)],

    # 4. z
    [(1,0), (1,1), (2,0)], [(0,-1), (1,0), (0,1)], 
    [(0,1), (-1,1), (1,1)], [(1,0), (1,-1), (1,1)]
]    

# 최댓값 저장
ans = 0

# 테트로미노 배치
for i in range(n):
    for j in range(m):
        for tet in tets:
            temp = paper[i][j]
            valid = True  # 유효한 모양인지 체크

            for di, dj in tet:
                ni, nj = i + di, j + dj
                if 0 <= ni < n and 0 <= nj < m:
                    temp += paper[ni][nj]
                else:
                    valid = False
                    break
            
            if valid:
                ans = max(ans, temp)


print(ans)